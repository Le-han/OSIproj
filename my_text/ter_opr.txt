mMap.put("Первое поколение компьютеров", "Первое поколение компьютеров: электронно-вакуумные лампы, 1940-1950. Зарождение класса сервисных, управляющих программ. Зарождение языков программирования. Однопользовательский, персональный режим.");
mMap.put("Второе поколение компьютеров", "Второе поколение компьютеров: полупроводниковые приборы: диоды и транзисторы, 1950-1960, пакетная обработка заданий, мультипрограммирование, языки управления заданиями, файловые системы, виртуальные устройства, операционные системы.");
mMap.put("Третье поколение компьютеров", "Третье поколение компьютеров: интегральные схемы малой и средней интеграции, 1960-1970, аппаратная унификация узлов и устройств, создание семейств компьютеров, унификация компонентов программного обеспечения.");
mMap.put("Компьютеры четвертого поколения", "Компьютеры четвертого поколения: большие и сверхбольшие интегральные схемы, 1970-х: настоящее время. «Дружественность» пользовательских интерфейсов, сетевые технологии, безопасность хранения и передачи данных.");
mMap.put("Вычислительная система", "Вычислительная система: совокупность аппаратных и программных средств, функционирующих в единой системе и предназначенных для решения задач определенного класса.");
mMap.put("Уровни вычислительной системы снизу-вверх", "Уровни вычислительной системы снизу-вверх: аппаратный, уровень физических устройств, уровень логических устройств, системы программирования, прикладные системы.");
mMap.put("Драйвер физического устройства", "Драйвер физического устройства: программа, основанная на использовании команд управления конкретного физического устройства и предназначенная для организации работы с данным устройством.");
mMap.put("Логическое/виртуальное устройство (ресурс)", "Логическое/виртуальное устройство (ресурс): устройство/ресурс, некоторые эксплутационные характеристики которого (возможно все) реализованы программным образом.");
mMap.put("Драйвер логического/виртуального ресурса", "Драйвер логического/виртуального ресурса: программа, обеспечивающая существование и использование соответствующего ресурса.");
mMap.put("Ресурсы вычислительной системы", "Ресурсы вычислительной системы: совокупность всех физических и виртуальных ресурсов.");
mMap.put("Операционная система", "Операционная система: это комплекс программ, обеспечивающий управление ресурсами вычислительной системы.");
mMap.put("Система программирование", "Система программирование: это комплекс программ, обеспечивающий поддержание жизненного цикла программы в вычислительной системе.");
mMap.put("Этапы жизни программы", "Этапы жизни программы: проектирование, кодирование, тестирование, отладка, изготовление.");
mMap.put("Проектирование", "Проектирование: исследование задачи, исследование характеристик объектной среды (как объектная среда будет связана с нашей системой).");
mMap.put("Объектная среда", "Объектная среда: это та ВС, в рамках которой продукт будет функционировать.");
mMap.put("Инструментальная среда", "Инструментальная среда: это ВС, которая будет использована для разработки программ.");
mMap.put("Этап кодирования", "Этап кодирования: Построение кода на основании спецификаций при использовании языков программирования, трансляторов, средств для использования библиотек и средств для разработки программных продуктов. Результатом этапа кодирования являются исполняемые модули, объектные модули, исходные тексты программ и библиотеки.");
mMap.put("Тестирование", "Тестирование: это проверка спецификаций функционирования программы на некоторых наборах входных данных.");
mMap.put("Отладка", "Отладка: процесс поиска, анализа и исправления зафиксированных при тестировании и эксплуатации ошибок.");
mMap.put("Современные разработки программного обеспечения", "Современные разработки программного обеспечения: каскадная модель, каскадно-иттерационная, спиральная.");
mMap.put("Прототип", "Прототип: программа, частично реализующая функциональность и внешний интерфейс разрабатываемой системы.");
mMap.put("Виртуальная машина", "Виртуальная машина: программно реализованные апаратные средства. Спецификация некоторой вычислительной среды");
mMap.put("Прикладная система", "Прикладная система: программная система, ориентированная на решение или автоматизацию решения задач из конкретной предметной области.");
mMap.put("Принципы работы компьютера Фон Неймана: принцип двоичного кодирования, принцип хранимой программы, принцип программного управления.", "Принципы работы компьютера Фон Неймана: принцип двоичного кодирования, принцип хранимой программы, принцип программного управления.");
mMap.put("Центральный процессор (ЦП)", "Центральный процессор (ЦП): компонент компьютера, обеспечивающий выполнение программ. Программы, выполняемые в рамках процессора, координируют работу ОЗУ и внешних устройств.");
mMap.put("Оперативно запоминающее устройство (ОЗУ)", "Оперативно запоминающее устройство (ОЗУ): устройство хранения данных, в котором размещается исполняемая в данный момент программа и из которого выбираются команды и данные этой программы.");
mMap.put("Внешние устройства", "Внешние устройства: программно управляемые устройства, входящие в состав компьютера.");
mMap.put("Арифметически-логическое устройство (АЛУ)", "Арифметически-логическое устройство (АЛУ): устройство, реализующее команды, которые подразумевают обработку данных.");
mMap.put("Устройство управления (УУ)", "Устройство управления (УУ): обеспечивает последовательный выбор команд, которые необходимо выполнить программе, их контроль, дешифровку и, в зависимости от типа команды, последующую обработку.");
mMap.put("ОЗУ состоит из", "ОЗУ состоит из: ячеек памяти, которые состоят из тегов (поле служебной информации) и машинных слов ( поле программно изменяемой информации).");
mMap.put("Производительность оперативной памяти", "Производительность оперативной памяти: скорость доступа процессора к данным, размещенным в ОЗУ.");
mMap.put("Время доступа (access time- taccess)", "Время доступа (access time- taccess): время между запросом на чтение слова из оперативной памяти и получением содержимого этого слова.");
mMap.put("Длительность цикла памяти (cycle time - tcycle)", "Длительность цикла памяти (cycle time - tcycle): минимальное время между началом текущего и последующего обращения к памяти. (tcycle>taccess)");
mMap.put("Расслоение ОЗУ", "Расслоение ОЗУ: один из аппаратных путей решения проблемы дисбаланса в скорости доступа к данным, размещенным в ОЗУ и производительностью ЦП.");
mMap.put("Регистровая память", "Регистровая память: совокупность устройств памяти ЦП ,предназначенных для временного хранения операндов, информации, результатов операций. ( Регистр Адреса (РА), Регистр Результата (РР),Слово – состояние процессора (ССП или PSW), Регистры внешних устройств (РВУ) , Регистр указатель стека (РУС).");
mMap.put("КЭШ память", "КЭШ память: (Аппаратное решение) буферизация работы процессора с оперативной памятью.");
mMap.put("Стратегии вытеснения КЭШ памяти", "Стратегии вытеснения КЭШ памяти: случайное, наименее популярного.");
mMap.put("Процесс вытеснения", "Процесс вытеснения: сквозное, с обратной связью.");
mMap.put("Прерывание", "Прерывание: событие в компьютере, при возникновении которого в процессоре происходит предопределенная последовательность действий.");
mMap.put("Внутреннее прерывание", "Внутреннее прерывание: инициируются схемами контроля работы процессора.");
mMap.put("Внешнее прерывание", "Внешнее прерывание: события, возникающие в компьютере в результате взаимодействия.");
mMap.put("Внешние запоминающие устройства (ВЗУ)", "Внешние запоминающие устройства (ВЗУ): устройства, предназначенные для хранения данных и программ.");
mMap.put("Устройства ввода и отображения информации", "Устройства ввода и отображения информации: осуществляют ввод из вне некоторой информации и отображение ее в виде некоторых результирующих данных.");
mMap.put("Устройства приема и передачи данных используются для", "Устройства приема и передачи данных используются для: получения данных с других компьютеров, «из вне».");
mMap.put("ВЗУ Последовательного доступа", "ВЗУ Последовательного доступа: Магнитная лента");
mMap.put("ВЗУ Прямого доступа", "ВЗУ Прямого доступа: магнитные диски, магнитный барабан, магнито-электронные ВЗУ прямого доступа.");
mMap.put("Поток информации", "Поток информации: программно заданная информация о том, что необходимо прочесть или записать или переместить данные из одного места в другое.");
mMap.put("Поток данных", "Поток данных: непосредственно ответ на управляющее воздействие и связанное с этим ответом перемещение данных от внешнего устройства в ОП или в ЦП.");
mMap.put("DMA (direct memory access)", "DMA (direct memory access): устройство, позволяющее обращаться к ОЗУ из ВЗУ без посредника.");
mMap.put("Иерархия памяти", "Иерархия памяти: регистры общего назначения, КЭШ 1-го уровня, КЭШ 2-го уровня, ОЗУ, внешнего запоминающего устройство с внутренней КЭШ-буферизацией, внешнего запоминающего устройство без внутренней КЭШ-буферизации, внешнего запоминающего устройство длительного хранения.");
mMap.put("Мультипрограммный режим", "Мультипрограммный режим: режим при котором возможна организация переключения выполнения с одной программы на другую.");
mMap.put("Аппаратные средства компьютера, необходимые для поддержания мультипрограммного режима", "Аппаратные средства компьютера, необходимые для поддержания мультипрограммного режима: аппарат прерываний (хотя бы прерывание по таймеру), аппарат защиты памяти, специальный режим ОС (привилегированный).");
mMap.put("Регистровые окна", "Регистровые окна: один из способов решения проблемы вложенных процедур.");
mMap.put("Аппарат виртуальной памяти", "Аппарат виртуальной памяти: аппаратные средства компьютера, обеспечивающие преобразование (установление соответствия) программных адресов, используемых в программе адресам физической памяти в которой размещена программа при выполнении.");
mMap.put("Базирование адресов", "Базирование адресов: реализация одной из моделей аппарата виртуальной памяти. При базировании выделяется регистр, в котором будет храниться адрес, начиная с которого размещается программа.");
mMap.put("Страничная организация", "Страничная организация: аппаратная организация памяти, при которой все пространство делится на фрагменты одного размера (обычно 2^К)");
mMap.put("Виртуальное адресное пространство", "Виртуальное адресное пространство: множество виртуальных страниц, доступных для использования в программе. Количество виртуальных страниц определяется размером поля «номер виртуальной страницы» в адресе.");
mMap.put("Физическое адресное пространство", "Физическое адресное пространство: оперативная память, подключенная к данному компьютеру. Физическая память может иметь произвольный размер (число физических страниц может быть меньше, больше или равно числу виртуальных страниц).");
mMap.put("Классификация Флинна", "Классификация Флинна: поток управляющей информации – собственно команд (инструкций), и поток данных. Считаем потоки данных и команд независимыми (условно). Рассмотриваем все возможные комбинации.");
mMap.put("ОКОД", "ОКОД: (SISD – single instruction (одиночный поток команд), single data stream, (одиночный поток данных)) Традиционные компьютеры, которые мы называем однопроцессорными.");
mMap.put("ОКМД", "ОКМД: (SIMD – single instruction(одиночный поток команд), multiple data stream(множественный поток данных)) Для каждой команды порция данных (векторная или матричная обработка данных)");
mMap.put("МКОД", "МКОД: (MISD – multiple instruction(множественный поток команд), single data stream(одиночный поток данных)) – это вырожденная категория, считается, что ее нет. (Но есть вырожденные случаи — обработка графики)");
mMap.put("МКМД", "МКМД: (MIMD - multiple instruction(множественный поток команд), multiple data stream(множественный поток данных))");
mMap.put("Гетерогенные", "Гетерогенные: системы объединяющие кластеры разных мощностей. Преимущества кластеров: 1) относительная дешевизна; 2) способность к расширению, увеличению мощностей.");
mMap.put("Терминальный комплекс", "Терминальный комплекс: это многомашинная ассоциация предназначенная для организации массового доступа удаленных и локальных пользователей к ресурсам некоторой вычислительной системы.");
mMap.put("Основная вычислительная система", "Основная вычислительная система: система, массовый доступ к ресурсам которой обеспечивается терминальным комплексом.");
mMap.put("Локальные мультиплексоры", "Локальные мультиплексоры: аппаратные комплексы, предназначенные для осуществление связи и взаимодействия вычислительной системы с несколькими устройствами через один канал ввода/вывода.");
mMap.put("Локальные терминалы", "Локальные терминалы: оконечные устройства, используемые для взаимодействия пользователей с вычислительной системой.");
mMap.put("Модемы", "Модемы: устройства, предназначенные для организации взаимодействия вычислительной системы с удаленными терминалами с использованием телефонной сети. В функцию модема входит преобразование информации из дискретного, цифрового представления.");
mMap.put("Удаленные терминалы", "Удаленные терминалы: терминалы, имеющие доступ к вычислительной системе с использованием телефонных линий связи и модемов.");
mMap.put("Удаленные мультиплексоры", "Удаленные мультиплексоры: мультиплексоры, подключенные к вычислительной системе с использованием телефонных линий связи и модемов.");
mMap.put("Виды каналов", "Виды каналов: коммутируемые (каждый раз новый), выделенные( зарезервированный).");
mMap.put("Симплексные каналы", "Симплексные каналы: каналы, по которым передача информации ведется в одном направлении");
mMap.put("Дуплексные каналы", "Дуплексные каналы: каналы, которые обеспечивают одновременную передачу информации в двух направлениях (например, телефонный разговор, мы одновременно можем и говорить и слушать).");
mMap.put("Полудуплексные каналы", "Полудуплексные каналы: каналы, которые обеспечивают передачу информации в двух направлениях, но в каждый момент времени только в одну сторону (подобно рации).");
mMap.put("Компьютерная сеть", "Компьютерная сеть: объединение компьютеров (или вычислительных систем), взаимодействующих через коммуникационную среду.");
mMap.put("Коммуникационная среда", "Коммуникационная среда: каналы и средства передачи данных.");
mMap.put("Абонентские машины (хосты)", "Абонентские машины (хосты): обеспечивают обмен содержательной информацией работы спользователями.");
mMap.put("OSI", "OSI: системы открытых интерфейсов.");
mMap.put("Уровни взаимодействия компьтеров", "Уровни взаимодействия компьтеров: физический уровень, канальный уровень, сетевой уровень, транспортный уровень (уровень логического канала), сеансовый уровень, представительский уровень, прикладной уровень.");
mMap.put("Протокол", "Протокол: формальное описание сообщений и правил, по которым сетевые устройства (вычислительные системы) осуществляют обмен информацией. Или правила взаимодействия одноименных уровней.");
mMap.put("Интерфейс", "Интерфейс: правила взаимодействия вышестоящего уровня с нижестоящим.");
mMap.put("Служба или сервис", "Служба или сервис: набор операций, предоставляемых нижестоящим уровнем вышестоящему.");
mMap.put("Стек протоколов", "Стек протоколов: перечень разноуровневых протоколов, реализованных в системе");
mMap.put("Сообщение", "Сообщение: логически целостная порция данных, имеющая произвольный размер.");
mMap.put("Сеть коммутации каналов", "Сеть коммутации каналов: обеспечивает выделение коммутации связи на весь сеанс связи.");
mMap.put("Сеть коммутации пакетов", "Сеть коммутации пакетов: обеспечивает выделение коммутации связи на передачу одного пакета.");
mMap.put("IP адрес", "IP адрес: последовательностью четырех байтов. В адресе кодируется уникальный номер сети, а также номер компьютера (сетевого устройства в сети).");
mMap.put("Пакет", "Пакет: это блок данных, который передаётся вместе с информацией, необходимой для его корректной доставки. Каждый пакет перемещается по сети независимо от остальных.");
mMap.put("Дейтаграмма", "Дейтаграмма: это пакет протокола IP. Контрольная информация занимает первые пять или шесть 32- битных слов дейтаграммы. Это её заголовок (header). По умолчанию, его длина равна пяти словам, шестое является дополнительным. Для указания точной длины заголовка в нём есть специальное поле – длина заголовка (IHL, Internal Header Length).");
mMap.put("Шлюз", "Шлюз: устройство, передающее пакеты между различными сетями.");
mMap.put("Маршрутизация", "Маршрутизация: процесс выбора шлюза или маршрутизатора");
mMap.put("Протокол контроля передачи (TCP, Transmission Control Protocol)", "Протокол контроля передачи (TCP, Transmission Control Protocol): обеспечивает надежную доставку данных с обнаружением и исправлением ошибок и с установлением логического соединения.");
mMap.put("Протокол пользовательских дейтаграмм (UDP, User Datagram Protocol)", "Протокол пользовательских дейтаграмм (UDP, User Datagram Protocol): отправляет пакеты с данными, «не заботясь» об их доставке.");
mMap.put("Протоколы, опирающиеся на TCP", "Протоколы, опирающиеся на TCP: ( TELNET (Network Terminal Protocol), FTP (File Transfer Protocol), SMTP (Simple Mail Transfer Protocol),");
mMap.put("Протоколы, опирающиеся на UDP", "Протоколы, опирающиеся на UDP: DNS (Domain Name Service), RIP (Routing Information Protocol), NFS (Network File System)");
mMap.put("Сетевая ОС", "Сетевая ОС: физическую сеть в которой подключенные компьютеры взаимодействуют с помощью протоколов, сетевая ОС предоставляет пользователям распределенные прикладные приложения");
mMap.put("Распределенная ОС", "Распределенная ОС: ОС, функционирующая на многопроцессорном или многомашинном комплексе, в котором на каждом из узлов функционирует свое ядро, а также система, обеспечивающая распределение возможностей (ресурсов) ОС.");
mMap.put("Процесс", "Процесс: это совокупность машинных команд и данных, обрабатываемых в рамках ВС и обладающая правами на владение некоторым набором ресурсов. (Вообще определений много)");
mMap.put("Существуют ресурсы,", "Существуют ресурсы,: которые монопольно принадлежат данному процессу, и разделяемые ресурсы, которые принадлежат одновременно 2 и более процессам.");
mMap.put("Выделения ресурсов процессу", "Выделения ресурсов процессу: предварительная декларация использования тех или иных ресурсов, динамическое пополнение списка принадлежащих процессу ресурсов по ходу.");
mMap.put("Любая ОС должна удовлетворять набору свойств", "Любая ОС должна удовлетворять набору свойств: надежность, обеспечение защиты, эффективность, предсказуемость.");
mMap.put("Резидентная", "Резидентная: постоянно находящаяся в памяти");
mMap.put("Ядро (kernel)", "Ядро (kernel): резидентная часть ОС, работающая в режиме супервизора. («обычно» работает в режиме физической адресации).");
mMap.put("Системный вызов", "Системный вызов: средство ОС, обеспечивающее возможность процессов обращаться к ОС за теми или иными функциями.");
mMap.put("Монолитное ядро", "Монолитное ядро: ядро, которое включает в себя все возможности операционной системы, запускаются как единый процесс.");
mMap.put("Существует стационарное микроядро", "Существует стационарное микроядро: обеспечивает минимальные функции ОС (на нем все держится)");
mMap.put("Логические функции ОС", "Логические функции ОС: управление процессами, управление ОП, планирование, управление устройствами и ФС");
mMap.put("Буфер ввода процессов", "Буфер ввода процессов: область на внешней памяти, где аккумулируются все процессы, которые еще не начали выполняться.");
mMap.put("Буфер обрабатываемых процессов", "Буфер обрабатываемых процессов: область памяти, где хранятся данные процессов, которые начали обрабатываться в мультипрограммном режиме.");
mMap.put("Пакет программ", "Пакет программ: совокупность программ, для выполнения каждого из которых требуется некоторое время работы процессора.");
mMap.put("Квант времени ЦП", "Квант времени ЦП: некоторый фиксированный ОС промежуток времени работы ЦП");
mMap.put("Системы реального времени", "Системы реального времени: являются специализированными системами в которых все функции планирования ориентированы на обработку некоторых событий за время, не превосходящее некоторого предельного значение");
mMap.put("Системы с разделением времени", "Системы с разделением времени: системы, в которых на выполенние каждого процесса отводится определенный промежуток (квант) процессорного времени.");
mMap.put("Считывание информации, алгоритмы", "Считывание информации, алгоритмы: простейшая модель – случайная выборка из очереди, FIFO, LIFO, SSTF – жадный, Приоритетный алгоритм (RPI) – это алгоритм, когда последовательность обменов (очередь) имеет характеристику приоритетов, SCAN, C-SCAN, N-step-SCAN.");
mMap.put("RAID система", "RAID система: представляет собой набор независимых дисков, которые рассматриваются ОС как единое дисковое устройство, где данные представляются в виде последовательности записей, которые называются полосы.");
mMap.put("Специальные файлы устройств", "Специальные файлы устройств: в системе Unix единый интерфейс организации взаимодействия с внешними устройствами");
mMap.put("Файлы байториентированных устройств", "Файлы байториентированных устройств: (драйверы обеспечивают возможность побайтного обмена данными и, обычно, не используют централизованной внутрисистемной кэш-буферизации );");
mMap.put("Файлы блокориентированных устройств", "Файлы блокориентированных устройств: (обмен с данными устройствами осуществляется фиксированными блоками данных, обмен осуществляется с использованием специального внутрисистемного буферного кэша).");
mMap.put("Индексный дескриптор файла устройства содержит", "Индексный дескриптор файла устройства содержит: тип файла устройства – байториентированный или блокориентированный, «старший номер» (major number) устройства - номер драйвера в соответствующей таблице драйверов устройств, «младший номер» (minor number) устройства – служебная информация, передающаяся драйверу устройства.");
mMap.put("bdevsw", "bdevsw: таблица драйверов блокориентированных устройств.");
mMap.put("cdevsw", "cdevsw: таблица байториентированных устройств.");
mMap.put("Существует два, традиционных способа включения драйверов новых устройств в систему", "Существует два, традиционных способа включения драйверов новых устройств в систему: путем «жесткого», статического встраивания драйвера в код ядра, требующего перекомпиляцию исходных текстов ядра или пересборку объектных модулей ядра и за счет динамического включения драйвера в систему.");
mMap.put("Таблица индексных дескрипторов открытых файлов", "Таблица индексных дескрипторов открытых файлов: для каждого открытого в рамках системы файла формируется запись в таблице ТИДОФ, содержащая: копии индексного дескриптора (ИД) открытого файла, кратность - счетчик открытых в системе файлов, связанных с данным ИД.");
mMap.put("Таблица файлов", "Таблица файлов: таблица файлов содержит сведения о всех файловых дескрипторах открытых в системе файлов.");
mMap.put("Таблица открытых файлов", "Таблица открытых файлов: С каждым процессом связана таблица открытых файлов (ТОФ). Номер записи в данной таблице есть номер ФД, который может использоваться в процессе. Каждая строка этой таблицы имеет ссылку на соответствующую строку ТФ.");
mMap.put("Организация буферизации при обмене", "Организация буферизации при обмене: В RAM организуется пул буферов, где каждый буфер имеет размер в один блок. Каждый из этих блоков может быть ассоциирован с драйвером одного из физических блок");
mMap.put("SYNC", "SYNC: по этой пользовательской команде осуществляется сброс данных на диск.");
mMap.put("Основные задачи при организации работы с ОП", "Основные задачи при организации работы с ОП: контроль состояния каждой единицы памяти (свободна/распределена), сратегия распределения памяти, выделение памяти, стратегия освобождения памяти.");
mMap.put("Стратегии и методы управления", "Стратегии и методы управления: одиночное непрерывное распределение, распределение разделами, распределение перемещаемыми разделами, страничное распределение, сегментное распределение, сегменто-страничное распределение.");
mMap.put("TLB", "TLB: (Translation Lookaside Buffer) Буфер быстрого преобразования адресов.");
mMap.put("ХЭШ", "ХЭШ: функция берет номер виртуальной страницы и по этому номеру виртуальной страницы имеется некоторая функция, которая определяет номер записи хэш-таблицы.");
mMap.put("Алгоритм NRU", "Алгоритм NRU: (Not Recently Used – не использовавшийся в последнее время) Используются биты статуса страницы. R – обращение, М – модификация. Устанавливаются аппаратно при обращении или модификации.");
mMap.put("Алгоритм FIFO", "Алгоритм FIFO: first in, first out.");
mMap.put("Алгоритм LIFO", "Алгоритм LIFO: last in, first out.");
mMap.put("Алгоритм LRU", "Алгоритм LRU: (Least Recently Used – «менее недавно» - наиболее давно используемая страница)");
mMap.put("Алгоритм NFU", "Алгоритм NFU: (Not Frequently Used – редко использовавшаяся страница)");
mMap.put("Файловая система (ФС)", "Файловая система (ФС): часть операционной системы, представляющая собой совокупность организованных наборов данных, хранящихся на внешних запоминающих устройствах, и программных средств, гарантирующих именованный доступ к этим данным и их защиту");
mMap.put("Данные называются", "Данные называются: файлами, их имена - именами файлов.");
mMap.put("Правило работы с файлами", "Правило работы с файлами: открытие, работа с файлом, закрытие.");
mMap.put("Файловый дескриптор", "Файловый дескриптор: системная структура данных, содержащая информацию о актуальном состоянии «открытого» файла.");
mMap.put("Каталог", "Каталог: компонент файловой системы, содержащий информацию о содержащихся в файловой системе файлах. (Каталог — это файл)");
mMap.put("Суперблок", "Суперблок: блок ФС, в котором находится информация о настройках ФС и актуальном состоянии ФС (информация о свободных блоках, данных, которые содержат каталоги.)");
mMap.put("Блок", "Блок: порция данных, фиксированного размера, в рамках которого идет обмен данными с устройством.");
mMap.put("Таблица размещения файловой системы", "Таблица размещения файловой системы: таблица, в которой количество строк соответствует количеству блоков, в кот. i-ая строка соотв. i-ому блоку файловой системы.");
mMap.put("Индексные узлы или индексные дескрипторы", "Индексные узлы или индексные дескрипторы: организованное файловой системой компактное хранение информации о размещении блоков файлов в специальной структуре.");
mMap.put("“Жесткая” связь", "“Жесткая” связь: Есть содержимое файла, есть атрибут файла, и одним из полей атрибутов является количество имен у этого файла, и есть произвольное количество имен, которые как-то распределены по каталогам ФС.");
mMap.put(", “Символическая” связь", ", “Символическая” связь: файл с именем ?ame 2 , этому имени соответствуют атрибуты и соответствует содержимое, и есть специальный файл ?ame 1 , который ссылается на имя ?ame 2.");
mMap.put("Физическая архивация", "Физическая архивация: («один в один» или интеллектуальная физическия архивация (копируются только использованные блоки файловой системы)");
mMap.put("Логическая архивация", "Логическая архивация: копирование файлов (а не блоков), модифицированных после заданной даты.");
mMap.put("Файл Unix", "Файл Unix: это специальным образом именованный набор данных, размещенный в файловой системе.");
mMap.put("Обычный файл (regular file)", "Обычный файл (regular file): традиционный тип файла, содержащий данные пользователя. Интерпретация содержимого файла производится программой, обрабатывающей файл.");
mMap.put("Каталог (directory)", "Каталог (directory): специальный файл, обеспечивающий иерархическую организацию файловой системы. С каталогом ассоциируются все файлы, которые принадлежат данному каталогу.");
mMap.put("Специальный файл устройств (special device file)", "Специальный файл устройств (special device file): cистема позволяет ассоциировать внешние устройства с драйверами и предоставляет доступ к внешним устройствам, согласно общим интерфейсам работы с файлами.");
mMap.put("Именованный канал (named pipe)", "Именованный канал (named pipe): специальная разновидность файлов, позволяющая организовывать передачу данных между взаимодействующими процессами;");
mMap.put("Ссылка (link)", "Ссылка (link): позволяет создавать дополнительные ссылки к содержимому файла из различных точек файловой системы; Они могут нарушать древовидность организации ФС.");
mMap.put("Сокет (socket)", "Сокет (socket): средство взаимодействия процессов в пределах сети ЭВМ.");
mMap.put("Корневой каталог /", "Корневой каталог /: является основой любой файловой системы ОС UNIX. Все остальные файлы и каталоги располагаются в рамках структуры, порожденной корневым каталогом, независимо от их физического положения на диске.");
mMap.put("/unix", "/unix: файл загрузки ядра ОС.");
mMap.put("/bin", "/bin: файлы, реализующие общедоступные команды системы.");
mMap.put("/etc", "/etc: в этом каталоге находятся файлы, определяющие настройки системы");
mMap.put("/tmp", "/tmp: каталог для хранения временных системных файлов. При перезагрузке системы не гарантируется сохранение его содержимого.");
mMap.put("/mnt", "/mnt: каталог, к которому осуществляется монтирование дополнительных физических файловых систем для получения единого дерева логической файловой системы. Заметим, что это лишь соглашение, в общем случае можно примонтировать к любому каталогу.");
mMap.put("/dev", "/dev: каталог содержит специальные файлы устройств, с которыми ассоциированы драйверы устройств.");
mMap.put("/lib", "/lib: здесь находятся библиотечные файлы языка Си и других языков программирования.");
mMap.put("/usr", "/usr: размещается вся информация, связанная с обеспечением работы пользователей. Здесь также имеется подкаталог, содержащий часть библиотечных файлов (/usr/lib), подкаталог /usr/users (или /usr/ home), который становится текущим при входе пользователя в систему, подкаталог, где находятся дополнительные команды (/usr/bin), подкаталог, содержащий файлы заголовков (/usr/include), в котором,в свою очередь, подкаталог, содержащий include-файлы, характеризующие работу системы (например, signal.h - интерпретация сигналов).");
mMap.put("Индексный дескриптор в ОС UNIX", "Индексный дескриптор в ОС UNIX: это специальная структура данных файловой системы, которая ставится во взаимно однозначное соответствие с каждым файлом.");
mMap.put("Процесс", "Процесс: совокупность машинных команд и данных,которая исполняется в рамках вычислительной системы и обладает правами на владение некоторым набором ресурсов.");
mMap.put("Разделяемые ресурсы", "Разделяемые ресурсы: ресурсы разделяемые между процессами");
mMap.put("Буфер ввода процесса (БВП)", "Буфер ввода процесса (БВП): пространство, в котором размещаются и хранятся сформированные процессы от момента их образования, до момента начала выполнения.");
mMap.put("Буфер обрабатываемых процессов (БОП)", "Буфер обрабатываемых процессов (БОП): буфер, где размещаются процессы, работающие в мультипрограммном режиме.");
mMap.put("«Полновесные процессы»", "«Полновесные процессы»: это процессы, выполняющиеся внутри защищенных участков памяти операционной системы, то есть имеющие собственные виртуальные адресные пространства для статических и динамических данных");
mMap.put("Легковесные процессы", "Легковесные процессы: называемые еще как нити или сопрограммы, не имеют собственных защищенных областей памяти.");
mMap.put("Контекст процесса", "Контекст процесса: совокупность данных, характеризующих актуальное состояние процесса.");
mMap.put("Процесс в ОС Unix", "Процесс в ОС Unix: объект, зарегистрированный в таблице процессов Unix или объект, порожденный системным вызовом fork()");
mMap.put("Идентификатором процесса (PID)", "Идентификатором процесса (PID): уникальным имя процесса. PID – целое число от 0 до некоторого предельного значения, определяющего максимальное число процессов (ресурс данной ОС), существующих в системе одновременно.");
mMap.put("Сегмент кода содержит", "Сегмент кода содержит: машинные команды и неизменяемые константы соответствующей процессу программы.");
mMap.put("Сегмент данных", "Сегмент данных: содержит данные, динамически изменяемые в ходе выполнения кода процесса.");
mMap.put("Системный вызов", "Системный вызов: специальная функция, позволяющая процессу обращаться к ядру ОС за выполнением тех или иных действий.");
mMap.put("Семейство системных вызовов exec()", "Семейство системных вызовов exec(): заменяет тело вызывающего процесса, после чего данный процесс начинает выполнять другую программу. Управление передается на точку ее входа. Возврат к первоначальной программе происходит только в случае ошибки при обращении к exec() , т.е. если фактической замены тела процесса не произошло.");
mMap.put("Квант времени", "Квант времени: непрерывный период процессорного времени.");
mMap.put("Приоритет процесса", "Приоритет процесса: числовое значение, показывающее степень привилегированности процесса при использовании ресурсов ВС (в частности, времени ЦП).");
mMap.put("Невытесняющая стратегия", "Невытесняющая стратегия: если величина кванта не ограничена");
mMap.put("Вытесняющая стратегия", "Вытесняющая стратегия: величина кванта ограничена.");
mMap.put("Простой круговорот (RR – round robin)", "Простой круговорот (RR – round robin): не использует никакой статистической или динамической информации о приоритетах.");
mMap.put("При круговороте со смещением", "При круговороте со смещением: каждому процессу соответствует своя длина кванта, пропорциональная его приоритету.");
mMap.put("«Эгоистический» круговорот", "«Эгоистический» круговорот: Если параметры A и B : 0<=B<A. Процесс, войдя в систему ждет пока его приоритет не достигнет приоритета работающих процессов, а далее выполняется в круговороте. Приоритет выполняемых процессов увеличивается с коэффициентом B<A, следовательно, ожидающие процессы их догонят. При B=0 «эгоистический» круговорот практически сводится к простому");
mMap.put("Область свопинга", "Область свопинга: специально выделенное системой пространство внешней памяти");
mMap.put("Параллельные процессы", "Параллельные процессы: Процессы, выполнение которых хотя бы частично перекрывается по времени");
mMap.put("Независимые процессы", "Независимые процессы: процессы, использующие независимое множество ресурсов и на результат работы такого процесса не влияет работа независимого от него процесса.");
mMap.put("Взаимодействующие процессы", "Взаимодействующие процессы: совместно используют ресурсы, и выполнение одного может оказывать влияние на результат другого.");
mMap.put("Критические ресурсы", "Критические ресурсы: разделяемые ресурсы, которые должны быть доступны в текущий момент времени только одному процессу.");
mMap.put("Критическая секция, или критический интервал", "Критическая секция, или критический интервал: часть программы (фактически набор операций), в которой осуществляется работа с критическим ресурсом.");
mMap.put("Взаимное исключение", "Взаимное исключение: т.е. такой способ работы с разделяемым ресурсом, при котором постулируется, что в тот момент, когда один из процессов работает с разделяемым ресурсом, все остальные процессы не могут иметь к нему доступ.");
mMap.put("Тупики (deadlocks)", "Тупики (deadlocks): ситуации в которой конкурирующие за критический ресурс процессы безвозвратно блокируются.");
mMap.put("Блокирование", "Блокирование: ситуация, когда доступ одного из процессов к разделяемому ресурсу не обеспечивается из-за активности других, более приоритетных процессов.");
mMap.put("Семафоры", "Семафоры: это низкоуровневые средства синхронизации, для корректной практической реализации которых необходимо наличие специальных, атомарных семафорных машинных команд.");
mMap.put("Семафоры Дейкстры", "Семафоры Дейкстры: формальная модель, предложенная голландцем Дейкстрой, которая основывается на следующем предположении: имеется тип данных, именуемой семафором (только 2 значения). Над семафором определенны 2 операции: увеличить, уменьшить.");
mMap.put("Монитор Хоара", "Монитор Хоара: совокупность процедур и структур данных, объединенных в программный модуль специального вида.");
mMap.put("Сигнал", "Сигнал: средство уведомления процесса о наступлении некоторого события в системе. Инициаторы посылки сигнала - другой процесс или ОС.");
mMap.put("Неименованный канал", "Неименованный канал: область на диске, к которой не возможен доступ по имени, а только с помощью двух дискрипторов с ней ассоциированных.");
mMap.put("Именованный канал", "Именованный канал: расширение понятия конвейера в Unix.");
mMap.put("Система IPC", "Система IPC: альтернатива именованным каналам. Позволяет организовывать работу именованных каналов в произвольные моменты времени.");
mMap.put("Очередь сообщений", "Очередь сообщений: представляет собой некое хранилище типизированных сообщений, организованное по принципу FIFO.");
mMap.put("Механизм разделяемой памяти", "Механизм разделяемой памяти: позволяет нескольким процессам получить отображение некоторых страниц из своей виртуальной памяти на общую область физической памяти.");
mMap.put("Семафоры представляют", "Семафоры представляют: собой одну из форм IPC и используются для синхронизации доступа нескольких процессов к разделяемым ресурсам, т.е. фактически они разрешают или запрещают процессу использование разделяемого ресурса.");
mMap.put("Сокет", "Сокет: программный интерфейс для обеспечения информационного обмена между процессами.");